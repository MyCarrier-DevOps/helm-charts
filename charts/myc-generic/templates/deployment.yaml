{{- if (eq .Values.application.deploymentType "deployment")  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.deployment.name }}
  labels:
    {{- include "myc-generic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "myc-generic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "myc-generic.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myc-generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.application.deployment.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.service.ports }}
            - containerPort: {{ .port }}
              protocol: {{ .protocol }}
              name: {{ .name }}
            {{- end }}
          livenessProbe:
            {{- if eq (.Values.application.deployment.healthcheck.probeType | default "tcpSocket") "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.application.deployment.healthcheck.port | default 8000 }}
            {{- else if eq .Values.application.deployment.healthcheck.probeType "httpGet" }}
            httpGet:
              path: {{ .Values.application.deployment.healthcheck.path | default "/" }}
              port: {{ .Values.application.deployment.healthcheck.port | default 8000 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.application.deployment.healthcheck.livenessprobe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ .Values.application.deployment.healthcheck.livenessprobe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.application.deployment.healthcheck.livenessprobe.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.application.deployment.healthcheck.livenessprobe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.application.deployment.healthcheck.livenessprobe.successThreshold | default 1 }}
          readinessProbe:
            {{- if eq (.Values.application.deployment.healthcheck.probeType | default "tcpSocket") "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.application.deployment.healthcheck.port | default 8000 }}
            {{- else if eq .Values.application.deployment.healthcheck.probeType "httpGet" }}
            httpGet:
              path: {{ .Values.application.deployment.healthcheck.path | default "/" }}
              port: {{ .Values.application.deployment.healthcheck.port | default 8000 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.application.deployment.healthcheck.readinessprobe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ .Values.application.deployment.healthcheck.readinessprobe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.application.deployment.healthcheck.readinessprobe.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.application.deployment.healthcheck.readinessprobe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.application.deployment.healthcheck.readinessprobe.successThreshold | default 1 }}
          env:
          - name: APP_VERSION
            value: {{ .Values.image.tag | default .Chart.AppVersion }}
          {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
          {{- if kindIs "map" $value }}
            valueFrom: {{ $value | toYaml | nindent 14 }}
          {{- else }}
            value: {{ $value }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}