
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-stack-test-app-backend
  namespace: dev
  labels:
    
    app.kubernetes.io/name: test-stack-test-app-backend
    app.kubernetes.io/instance: test-stack-test-app-backend-dev
    app.kubernetes.io/part-of: test-stack
    app.kubernetes.io/component: "test-app-backend"
    app: test-stack-test-app-backend
    mycarrier.tech/environment: dev
    mycarrier.tech/envscaling: "0"
    mycarrier.tech/envType: "standard"
    mycarrier.tech/service-namespace: dev
    mycarrier.tech/reference: ""
    mycarrier.tech/commitDeployed: ""
    version: 1.0.0
    mycarrier/service-version: 1.0.0
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true,Prune=true
spec:
  replicas: 2
  revisionHistoryLimit: 2
  minReadySeconds: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: test-stack-test-app-backend
      app.kubernetes.io/instance: test-stack-test-app-backend-dev
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: test-stack-test-app-backend
        app.kubernetes.io/instance: test-stack-test-app-backend-dev
        app.kubernetes.io/part-of: test-stack
        app.kubernetes.io/component: "test-app-backend"
        app: test-stack-test-app-backend
        mycarrier.tech/environment: dev
        mycarrier.tech/envscaling: "0"
        mycarrier.tech/envType: "standard"
        mycarrier.tech/service-namespace: dev
        mycarrier.tech/reference: ""
        mycarrier.tech/commitDeployed: ""
        version: 1.0.0
        mycarrier/service-version: 1.0.0
        language: "csharp"
        
      annotations:
        vault.security.banzaicloud.io/vault-addr: "https://vault.mycarrier.tech"
        vault.security.banzaicloud.io/mutate-probes: "true"
        vault.security.banzaicloud.io/vault-auth-method: azure
        vault.security.banzaicloud.io/vault-path: clusterauth
        vault.security.banzaicloud.io/vault-role: appcluster
        vault.security.banzaicloud.io/vault-env-daemon: "true"
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
        sidecar.istio.io/inject: 'true'
        
        
    spec:
      
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        runAsNonRoot: true
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
      terminationGracePeriodSeconds: 10
      containers:
        - name: test-app-backend
          image: "myregistry.example.com/mycarrier/test-app:1.0.0"
          
          
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 8080
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          env:
            - name: Auth_IdentityApiKey_BaseUrl
              value: "vault:secrets/data/dev/shared/auth_identityapikey_baseurl#value"
            - name: Auth_MyCarrierCustomer_BaseUrl
              value: "vault:secrets/data/dev/shared/auth_mycarriercustomer_baseurl#value"
            - name: Auth_MyCarrierApi_BaseUrl
              value: "vault:secrets/data/dev/shared/auth_mycarrierapi_baseurl#value"
            - name: Auth_UserService_BaseUrl
              value: "vault:secrets/data/dev/shared/auth_userservice_baseurl#value"
            - name: AuthEnvironment
              value: "Development"
            - name: Auth_Environment
              value: "Development"
            - name: Analytics_Broker_Topic_Name
              value: "mc-test-stack-analytics-dev"
            - name: Auth_BasicCredentialUrl
              value: "https://app-common-basiccredential-dev-api.azurewebsites.net/"
            - name: CustomerCredentialUrl
              value: "https://app-common-basiccredential-dev-api.azurewebsites.net/"
            - name: SplitIo_ApiKey
              value: "vault:secrets/data/dev/shared/SplitIo_ApiKey#value"
            - name: mycarrier_jwt_secret
              value: "vault:secrets/data/dev/shared/mycarrier_jwt_secret#value"
            - name: KeyVault_SplitIoProxyApiKey
              value: "SplitIoProxyApiKey_dev"
            - name: SplitIoProxyApiKey_dev
              value: "vault:secrets/data/dev/shared/splitioproxyapikey-dev#value"
            - name: splitioproxyurl_k8s_dev
              value: "vault:secrets/data/dev/shared/splitioproxyurl-k8s-dev#value"
            - name: Auth_KeyVault_SplitIoProxyApiKey
              value: "SplitIoProxyApiKey-dev"
            - name: Auth_KeyVault_SplitIoProxyUrl
              value: "SplitIoProxyUrl-dev"
            - name: KeyVault_SplitIoProxyUrl
              value: "SplitIoProxyUrl_dev"
            - name: SplitIoProxyUrl_dev
              value: "vault:secrets/data/dev/shared/splitioproxyurl-dev#value"
            - name: Auth_KeyVault_StrivacityBaseUrl
              value: "StrivacityBaseUrl_dev"
            - name: KeyVault_StrivacityBaseUrl
              value: "StrivacityBaseUrl_dev"
            - name: StrivacityBaseUrl_dev
              value: "vault:secrets/data/dev/shared/strivacitybaseurl-dev#value"
            - name: Auth_KeyVault_StrivacityApiKey
              value: "StrivacityApiKey_dev"
            - name: KeyVault_StrivacityApiKey
              value: "StrivacityApiKey_dev"
            - name: StrivacityApiKey_dev
              value: "vault:secrets/data/dev/shared/strivacityapikey-dev#value"
            - name: Auth_KeyVault_StrivacityApiSecret
              value: "StrivacityApiSecret_dev"
            - name: KeyVault_StrivacityApiSecret
              value: "StrivacityApiSecret_dev"
            - name: StrivacityApiSecret_dev
              value: "vault:secrets/data/dev/shared/strivacityapisecret-dev#value"
            - name: Auth_KeyVault_StrivacityIdentityStore
              value: "StrivacityIdentityStore_dev"
            - name: KeyVault_StrivacityIdentityStore
              value: "StrivacityIdentityStore_dev"
            - name: StrivacityIdentityStore_dev
              value: "vault:secrets/data/dev/shared/strivacityidentitystore-dev#value"
            - name: Auth_KeyVault_StrivacityApiAudience
              value: "StrivacityApiAudience_dev"
            - name: KeyVault_StrivacityApiAudience
              value: "StrivacityApiAudience_dev"
            - name: StrivacityApiAudience_dev
              value: "vault:secrets/data/dev/shared/strivacityapiaudience-dev#value"
            - name: Auth_KeyVault_StrivacityInviteClientId
              value: "StrivacityInviteClientId_dev"
            - name: KeyVault_StrivacityInviteClientId
              value: "StrivacityInviteClientId_dev"
            - name: StrivacityInviteClientId_dev
              value: "vault:secrets/data/dev/shared/strivacityinviteclientid-dev#value"
            - name: allowanonymouskey_dev
              value: "vault:secrets/data/dev/shared/allowanonymouskey-dev#value"
            - name: SplitCommonUser
              value: "appstackuser@mycarrier.io"
            - name: Auth_SplitCommonUser
              value: "appstackuser@mycarrier.io"
            - name: KeyVault_IsActive
              value: "false"
            
            - name: "ComputedEnvironmentName"
              value: "dev"
            - name: OTEL_TRACES_EXPORTER
              value: otlp
            - name: OTEL_METRICS_EXPORTER
              value: otlp
            - name: OTEL_LOGS_EXPORTER
              value: otlp
            - name: OTEL_SERVICE_NAME
              value: test-stack
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: OTEL_RESOURCE_ATTRIBUTES_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: OTEL_HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: grpc
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_HOST_IP):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: >-
                k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME), k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME), k8s.namespace.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAMESPACE), k8s.pod.uid=$(OTEL_RESOURCE_ATTRIBUTES_POD_UID), k8s.pod.ip=$(OTEL_RESOURCE_ATTRIBUTES_POD_IP)
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 3000
            privileged: false
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
            
            - name: otel-log
              mountPath: /var/log/opentelemetry
        
      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: otel-log
          emptyDir: {}
      imagePullSecrets:
        - name: imagepull
---
