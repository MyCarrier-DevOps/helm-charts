{{- if .Values.infrastructure.azure.servicebus }}
{{- range $sbIndex, $sbInstance := .Values.infrastructure.azure.servicebus }}
{{- if $sbInstance.managementPolicies }}
{{- if has "Delete" $sbInstance.managementPolicies }}
{{- fail (printf "Delete management policy is not allowed for Service Bus namespace '%s'. To protect infrastructure, use [\"Create\", \"Update\", \"LateInitialize\", \"Observe\"] instead of [\"*\"] or explicit \"Delete\"." $sbInstance.name) }}
{{- end }}
{{- end }}
---
apiVersion: servicebus.azure.upbound.io/v1beta1
kind: ServiceBusNamespace
metadata:
  name: {{ $sbInstance.name | required "Service Bus name is required" }}
  namespace: {{ $sbInstance.namespace | default (printf "%s-%s" $.Values.environment.name $.Values.global.appStack) }}
  labels:
    {{- include "helm.labels.standard" $ | nindent 4 }}
  {{- if $sbInstance.annotations }}
  annotations:
    {{- toYaml $sbInstance.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if $sbInstance.managementPolicies }}
  managementPolicies:
    {{- toYaml $sbInstance.managementPolicies | nindent 4 }}
  {{- else }}
  managementPolicies:
    - "Observe"
  {{- end }}
  forProvider:
    location: {{ $sbInstance.location | required "Service Bus location is required" }}
    sku: {{ $sbInstance.sku | required "Service Bus sku is required" }}
    {{- if $sbInstance.resourceGroupName }}
    resourceGroupName: {{ $sbInstance.resourceGroupName }}
    {{- else if $sbInstance.resourceGroupNameRef }}
    resourceGroupNameRef:
      {{- toYaml $sbInstance.resourceGroupNameRef | nindent 6 }}
    {{- else if $sbInstance.resourceGroupNameSelector }}
    resourceGroupNameSelector:
      {{- toYaml $sbInstance.resourceGroupNameSelector | nindent 6 }}
    {{- else }}
    resourceGroupName: {{ printf "rg-%s-%s" $.Values.global.appStack $.Values.environment.name }}
    {{- end }}
    {{- if $sbInstance.capacity }}
    capacity: {{ $sbInstance.capacity }}
    {{- end }}
    {{- if $sbInstance.tags }}
    tags:
      {{- toYaml $sbInstance.tags | nindent 6 }}
    {{- end }}
{{- if not $sbInstance.topics }}
{{- fail "At least one topic with subscriptions is required when defining a Service Bus" }}
{{- end }}
{{- range $topicIndex, $topic := $sbInstance.topics }}
{{- if $topic.managementPolicies }}
{{- if has "Delete" $topic.managementPolicies }}
{{- fail (printf "Delete management policy is not allowed for Service Bus topic '%s/%s'. To protect infrastructure, use [\"Create\", \"Update\", \"LateInitialize\", \"Observe\"] instead of [\"*\"] or explicit \"Delete\"." $sbInstance.name $topic.name) }}
{{- end }}
{{- end }}
---
apiVersion: servicebus.azure.upbound.io/v1beta1
kind: Topic
metadata:
  name: {{ include "helm.azure.servicebus.topic.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name) }}
  namespace: {{ $sbInstance.namespace | default (printf "%s-%s" $.Values.environment.name $.Values.global.appStack) }}
  labels:
    {{- include "helm.labels.standard" $ | nindent 4 }}
    servicebus.mycarrier.io/namespace: {{ $sbInstance.name }}
    servicebus.mycarrier.io/topic: {{ include "helm.azure.servicebus.topic.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name) }}
  annotations:
    crossplane.io/external-name: {{ $topic.name }}
  {{- if $topic.annotations }}
    {{- toYaml $topic.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if $topic.managementPolicies }}
  managementPolicies:
    {{- toYaml $topic.managementPolicies | nindent 4 }}
  {{- else }}
  managementPolicies:
    - "Observe"
  {{- end }}
  forProvider:
    {{- if $topic.namespaceId }}
    namespaceId: {{ $topic.namespaceId }}
    {{- else if $topic.namespaceIdRef }}
    namespaceIdRef:
      {{- toYaml $topic.namespaceIdRef | nindent 6 }}
    {{- else }}
    namespaceIdSelector:
      matchLabels:
        {{- include "helm.labels.standard" $ | nindent 8 }}
    {{- end }}
    {{- if $topic.maxSizeInMegabytes }}
    maxSizeInMegabytes: {{ $topic.maxSizeInMegabytes }}
    {{- end }}
    {{- if hasKey $topic "requiresDuplicateDetection" }}
    requiresDuplicateDetection: {{ $topic.requiresDuplicateDetection }}
    {{- end }}
    {{- if $topic.defaultMessageTtl }}
    defaultMessageTtl: {{ $topic.defaultMessageTtl }}
    {{- end }}
    {{- if $topic.duplicateDetectionHistoryTimeWindow }}
    duplicateDetectionHistoryTimeWindow: {{ $topic.duplicateDetectionHistoryTimeWindow }}
    {{- end }}
    {{- if hasKey $topic "batchedOperationsEnabled" }}
    batchedOperationsEnabled: {{ $topic.batchedOperationsEnabled }}
    {{- end }}
    {{- if hasKey $topic "expressEnabled" }}
    expressEnabled: {{ $topic.expressEnabled }}
    {{- end }}
    {{- if hasKey $topic "partitioningEnabled" }}
    partitioningEnabled: {{ $topic.partitioningEnabled }}
    {{- end }}
    {{- if hasKey $topic "supportOrdering" }}
    supportOrdering: {{ $topic.supportOrdering }}
    {{- end }}
    {{- if $topic.autoDeleteOnIdle }}
    autoDeleteOnIdle: {{ $topic.autoDeleteOnIdle }}
    {{- end }}
{{- if not $topic.subscriptions }}
{{- fail "At least one subscription is required when defining a topic" }}
{{- end }}
{{- range $subIndex, $subscription := $topic.subscriptions }}
{{- if $subscription.managementPolicies }}
{{- if has "Delete" $subscription.managementPolicies }}
{{- fail (printf "Delete management policy is not allowed for Service Bus subscription '%s/%s/%s'. To protect infrastructure, use [\"Create\", \"Update\", \"LateInitialize\", \"Observe\"] instead of [\"*\"] or explicit \"Delete\"." $sbInstance.name $topic.name $subscription.name) }}
{{- end }}
{{- end }}
---
apiVersion: servicebus.azure.upbound.io/v1beta1
kind: Subscription
metadata:
  name: {{ include "helm.azure.servicebus.subscription.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name "subscription" $subscription.name) }}
  namespace: {{ $sbInstance.namespace | default (printf "%s-%s" $.Values.environment.name $.Values.global.appStack) }}
  labels:
    {{- include "helm.labels.standard" $ | nindent 4 }}
    servicebus.mycarrier.io/namespace: {{ $sbInstance.name }}
    servicebus.mycarrier.io/topic: {{ include "helm.azure.servicebus.topic.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name) }}
    servicebus.mycarrier.io/subscription: {{ include "helm.azure.servicebus.subscription.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name "subscription" $subscription.name) }}
  annotations:
    crossplane.io/external-name: {{ $subscription.name }}
  {{- if $subscription.annotations }}
    {{- toYaml $subscription.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if $subscription.managementPolicies }}
  managementPolicies:
    {{- toYaml $subscription.managementPolicies | nindent 4 }}
  {{- else }}
  managementPolicies:
    - "Observe"
  {{- end }}
  forProvider:
    {{- if $subscription.topicId }}
    topicId: {{ $subscription.topicId }}
    {{- else if $subscription.topicIdRef }}
    topicIdRef:
      {{- toYaml $subscription.topicIdRef | nindent 6 }}
    {{- else }}
    topicIdSelector:
      matchLabels:
        {{- include "helm.labels.standard" $ | nindent 8 }}
        servicebus.mycarrier.io/namespace: {{ $sbInstance.name }}
        servicebus.mycarrier.io/topic: {{ include "helm.azure.servicebus.topic.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name) }}
    {{- end }}
    maxDeliveryCount: {{ $subscription.maxDeliveryCount | default 10 }}
    {{- if $subscription.lockDuration }}
    lockDuration: {{ $subscription.lockDuration }}
    {{- end }}
    {{- if hasKey $subscription "requiresSession" }}
    requiresSession: {{ $subscription.requiresSession }}
    {{- end }}
    {{- if $subscription.defaultMessageTtl }}
    defaultMessageTtl: {{ $subscription.defaultMessageTtl }}
    {{- end }}
    {{- if hasKey $subscription "deadLetteringOnMessageExpiration" }}
    deadLetteringOnMessageExpiration: {{ $subscription.deadLetteringOnMessageExpiration }}
    {{- end }}
    {{- if hasKey $subscription "deadLetteringOnFilterEvaluationError" }}
    deadLetteringOnFilterEvaluationError: {{ $subscription.deadLetteringOnFilterEvaluationError }}
    {{- end }}
    {{- if hasKey $subscription "batchedOperationsEnabled" }}
    batchedOperationsEnabled: {{ $subscription.batchedOperationsEnabled }}
    {{- end }}
    {{- if $subscription.autoDeleteOnIdle }}
    autoDeleteOnIdle: {{ $subscription.autoDeleteOnIdle }}
    {{- end }}
    {{- if $subscription.forwardTo }}
    forwardTo: {{ $subscription.forwardTo }}
    {{- end }}
    {{- if $subscription.forwardDeadLetteredMessagesTo }}
    forwardDeadLetteredMessagesTo: {{ $subscription.forwardDeadLetteredMessagesTo }}
    {{- end }}
{{- if $subscription.rules }}
{{- range $ruleIndex, $rule := $subscription.rules }}
{{- if $rule.managementPolicies }}
{{- if has "Delete" $rule.managementPolicies }}
{{- fail (printf "Delete management policy is not allowed for Service Bus subscription rule '%s/%s/%s/%s'. To protect infrastructure, use [\"Create\", \"Update\", \"LateInitialize\", \"Observe\"] instead of [\"*\"] or explicit \"Delete\"." $sbInstance.name $topic.name $subscription.name $rule.name) }}
{{- end }}
{{- end }}
---
apiVersion: servicebus.azure.upbound.io/v1beta2
kind: SubscriptionRule
metadata:
  name: {{ include "helm.azure.servicebus.rule.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name "subscription" $subscription.name "rule" $rule.name) }}
  namespace: {{ $sbInstance.namespace | default (printf "%s-%s" $.Values.environment.name $.Values.global.appStack) }}
  labels:
    {{- include "helm.labels.standard" $ | nindent 4 }}
    servicebus.mycarrier.io/namespace: {{ $sbInstance.name }}
    servicebus.mycarrier.io/topic: {{ include "helm.azure.servicebus.topic.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name) }}
    servicebus.mycarrier.io/subscription: {{ include "helm.azure.servicebus.subscription.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name "subscription" $subscription.name) }}
  annotations:
    crossplane.io/external-name: {{ $rule.name }}
  {{- if $rule.annotations }}
    {{- toYaml $rule.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if $rule.managementPolicies }}
  managementPolicies:
    {{- toYaml $rule.managementPolicies | nindent 4 }}
  {{- else }}
  managementPolicies:
    - "Observe"
  {{- end }}
  forProvider:
    filterType: {{ $rule.filterType | required "Rule filterType is required" }}
    {{- if $rule.subscriptionId }}
    subscriptionId: {{ $rule.subscriptionId }}
    {{- else if $rule.subscriptionIdRef }}
    subscriptionIdRef:
      {{- toYaml $rule.subscriptionIdRef | nindent 6 }}
    {{- else }}
    subscriptionIdSelector:
      matchLabels:
        {{- include "helm.labels.standard" $ | nindent 8 }}
        servicebus.mycarrier.io/namespace: {{ $sbInstance.name }}
        servicebus.mycarrier.io/topic: {{ include "helm.azure.servicebus.topic.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name) }}
        servicebus.mycarrier.io/subscription: {{ include "helm.azure.servicebus.subscription.fullname" (dict "namespace" $sbInstance.name "topic" $topic.name "subscription" $subscription.name) }}
    {{- end }}
    {{- if $rule.sqlFilter }}
    sqlFilter: {{ $rule.sqlFilter | quote }}
    {{- end }}
    {{- if $rule.correlationFilter }}
    correlationFilter:
      {{- toYaml $rule.correlationFilter | nindent 6 }}
    {{- end }}
    {{- if $rule.action }}
    action: {{ $rule.action | quote }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
