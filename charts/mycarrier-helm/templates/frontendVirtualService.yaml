{{/* PERFORMANCE OPTIMIZATION: Precompute global context once instead of in every helper */}}
{{- $globalCtx := include "helm.context" $ | fromJson -}}
{{- $frontendApps := dict }}
{{- $hasPrimary := false }}
{{- range $appName, $appValues := .Values.applications }}
{{- if $appValues.isFrontend }}
{{- $_ := set $frontendApps $appName $appValues }}
{{- if $appValues.isPrimary }}
{{- $hasPrimary = true }}
{{- end }}
{{- end }}
{{- end }}

{{/* Only create multi-frontend VirtualService if we have multiple frontend apps and a primary */}}
{{- if and (gt (len $frontendApps) 1) $hasPrimary }}
{{- $primaryApp := "" }}
{{- range $appName, $appValues := $frontendApps }}
{{- if $appValues.isPrimary }}{{ $primaryApp = $appName }}{{ end }}
{{- end }}
{{- $primaryAppValues := index $frontendApps $primaryApp }}
{{- $primaryFullName := include "helm.fullname" (merge (dict "appName" $primaryApp "application" $primaryAppValues "ctx" $globalCtx) $) }}
{{- $domain := include "helm.domain" $ }}
{{- $domainPrefix := include "helm.domain.prefix" $ }}
{{- $namespace := include "helm.namespace" $ }}
{{- $multiFrontendContext := (merge (dict "frontendApps" $frontendApps "primaryApp" $primaryApp "primaryAppValues" $primaryAppValues "primaryFullName" $primaryFullName) $) }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $primaryFullName }}-multifrontend
  namespace: {{ $namespace }}
  labels:
    {{- $labels := include "helm.labels.standard" (merge (dict "appName" $primaryApp "application" $primaryAppValues) $) | fromYaml }}
    {{- $_ := set $labels "app.kubernetes.io/component" "multifrontend-routing" }}
    {{ toYaml $labels | indent 4 | trim }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true,Prune=true
    {{ include "helm.annotations.virtualservice" $ | indent 4 | trim }}
spec:
  {{ include "helm.specs.multifrontend.virtualservice" $multiFrontendContext | indent 2 | trim }}

{{- if hasPrefix "feature" $.Values.environment.name }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $primaryFullName }}-multifrontend-offload
  namespace: {{ $namespace }}
  labels:
    {{- $labels := include "helm.labels.standard" (merge (dict "appName" $primaryApp "application" $primaryAppValues) $) | fromYaml }}
    {{- $_ := set $labels "app.kubernetes.io/component" "multifrontend-offload" }}
    {{ toYaml $labels | indent 4 | trim }}
  annotations:
    {{ include "helm.annotations.virtualservice" $ | indent 4 | trim }}
spec:
  {{ include "helm.specs.multifrontend.offload.virtualservice" $multiFrontendContext | indent 2 | trim }}
{{- end }}
{{- end }}