suite: test allowed endpoints with new format
templates:
  - virtualService.yaml
tests:
  - it: should support new kind/match format for exact matches
    set:
      applications:
        testapp:
          networking:
            istio:
              enabled: true
              allowedEndpoints:
                - kind: "exact"
                  match: "/api/users"
                - kind: "exact" 
                  match: "/health"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: VirtualService
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-api-users
            match:
              - uri:
                  exact: "/api/users"
            route:
              - destination:
                  host: testapp
                  port:
                    number: 8080
                weight: 100
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-health
            match:
              - uri:
                  exact: "/health"

  - it: should support new kind/match format for prefix matches
    set:
      applications:
        testapp:
          networking:
            istio:
              enabled: true
              allowedEndpoints:
                - kind: "prefix"
                  match: "/api/"
                - kind: "prefix"
                  match: "/docs/"
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-api
            match:
              - uri:
                  prefix: "/api/"
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-docs
            match:
              - uri:
                  prefix: "/docs/"

  - it: should support new kind/match format for regex matches
    set:
      applications:
        testapp:
          networking:
            istio:
              enabled: true
              allowedEndpoints:
                - kind: "regex"
                  match: "/webhook/(dwolla|plaid|stripe)"
                - kind: "regex"
                  match: "/api/v[12]/users"
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-webhook-dwolla-plaid-stripe-
            match:
              - uri:
                  regex: "/webhook/(dwolla|plaid|stripe)"
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-api-v-12--users
            match:
              - uri:
                  regex: "/api/v[12]/users"

  - it: should support mixed formats (new and legacy)
    set:
      applications:
        testapp:
          networking:
            istio:
              enabled: true
              allowedEndpoints:
                - "/legacy/exact"
                - "/legacy/prefix/*"
                - kind: "exact"
                  match: "/new/exact"
                - kind: "prefix"
                  match: "/new/prefix/"
                - kind: "regex"
                  match: "/new/regex/[0-9]+"
    asserts:
      - hasDocuments:
          count: 1
      # Legacy format tests
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-legacy-exact
            match:
              - uri:
                  exact: "/legacy/exact"
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-legacy-prefix
            match:
              - uri:
                  prefix: "/legacy/prefix/"
      # New format tests
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-new-exact
            match:
              - uri:
                  exact: "/new/exact"
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-new-prefix
            match:
              - uri:
                  prefix: "/new/prefix/"
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-new-regex-0-9
            match:
              - uri:
                  regex: "/new/regex/[0-9]+"

  - it: should default to exact match for unrecognized kind
    set:
      applications:
        testapp:
          networking:
            istio:
              enabled: true
              allowedEndpoints:
                - kind: "unknown"
                  match: "/api/test"
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-api-test
            match:
              - uri:
                  exact: "/api/test"

  - it: should sanitize complex regex patterns in rule names
    set:
      applications:
        testapp:
          networking:
            istio:
              enabled: true
              allowedEndpoints:
                - kind: "regex"
                  match: "^/api/(users|orders)/(\\d+)/?$"
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.http
          content:
            name: testapp-allowed-api-users-orders-d
            match:
              - uri:
                  regex: "^/api/(users|orders)/(\\d+)/?$"

  - it: should preserve forbidden rule when using new format
    set:
      applications:
        testapp:
          networking:
            istio:
              enabled: true
              allowedEndpoints:
                - kind: "exact"
                  match: "/allowed"
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.http
          content:
            name: testapp-forbidden
            match:
              - uri:
                  prefix: /
            fault:
              abort:
                httpStatus: 403
                percentage:
                  value: 100
