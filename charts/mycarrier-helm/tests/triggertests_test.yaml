suite: Test trigger tests template
templates:
  - triggertestengine.yaml
tests:
  - it: should create a job for each application
    set:
      fullnameOverride: app
      namespace: dev
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "apitests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=whatever"
        app2:
          version: 2.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app2"
            tag: "2.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "apitests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=whatever"
    asserts:
      - isKind:
          of: Job
      - equal:
          path: metadata.namespace
          value: dev
      - matchRegex:
          path: metadata.name
          pattern: ^app-app[12]-trigger$
      - exists:
          path: spec
      - equal:
          path: apiVersion
          value: batch/v1
      - hasDocuments:
          count: 2
          
  - it: should only create jobs for enabled applications
    set:
      fullnameOverride: app
      namespace: dev-app
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "apitests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=whatever"
    asserts:
      - isKind:
          of: Job
      - hasDocuments:
          count: 1
      - matchRegex:
          path: metadata.name
          pattern: ^app-app1-trigger$
          
  - it: should have proper labels and annotations
    set:
      fullnameOverride: app
      namespace: dev-app
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "apitests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=whatever"
    asserts:
      - isKind:
          of: Job
      - hasDocuments:
          count: 1
      - exists:
          path: metadata.labels
      - exists:
          path: metadata.annotations
            
  - it: should use testenginehook spec
    set:
      fullnameOverride: app
      namespace: dev-app
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "apitests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=whatever"
    asserts:
      - exists:
          path: spec
          
  # Edge case tests for testdefinitions
  - it: should handle multiple test definitions correctly
    set:
      fullnameOverride: app
      namespace: dev-app
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "apitests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=api"
              - name: "uitests"
                containerImage: "cypress/included"
                containerTag: "12.8.1"
                secretId: "vault:Secret/data/ui#SecretId"
                filters:
                  - "TestCategory=ui"
                  - "TestPriority=high"
              - name: "performancetests"
                containerImage: "k6/operator"
                containerTag: "latest"
                secretId: "vault:Secret/data/performance#SecretId"
                filters:
                  - "TestCategory=performance"
    asserts:
      - isKind:
          of: Job
      - hasDocuments:
          count: 1
      - exists:
          path: spec
          
  - it: should handle special characters in filter values correctly
    set:
      fullnameOverride: app
      namespace: dev-app
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "specialchartests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=special@chars"
                  - "TestName=special-name_with.chars"
                  - "TestPath=path/with/slashes"
    asserts:
      - isKind:
          of: Job
      - hasDocuments:
          count: 1
      - exists:
          path: spec
          
  - it: should handle custom TTL values correctly
    set:
      fullnameOverride: app
      namespace: dev-app
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "600"
            testdefinitions:
              - name: "apitests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters:
                  - "TestCategory=whatever"
    asserts:
      - isKind:
          of: Job
      - hasDocuments:
          count: 1
      - exists:
          path: spec
          
  - it: should handle no filters in test definition correctly
    set:
      fullnameOverride: app
      namespace: dev-app
      metaEnvironment: dev
      applications:
        app1:
          version: 1.0.0
          enabled: true
          image:
            registry: "myregistry.example.com"
            repository: "mycarrier/app1"
            tag: "1.0.0"
          testtrigger:
            ttlSecondsAfterFinished: "300"
            testdefinitions:
              - name: "nofiltertests"
                containerImage: "alpine/curl"
                containerTag: "latest"
                secretId: "vault:Secret/data/secret#SecretId"
                filters: []
    asserts:
      - isKind:
          of: Job
      - hasDocuments:
          count: 1
      - exists:
          path: spec