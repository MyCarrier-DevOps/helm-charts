# Default values for mycarrier Helm chart
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Global Settings
## Global settings used across all applications

## @param global.appStack - Application stack name, used for naming resources and grouping applications
## @param global.gitbranch - Name of the git branch (used for feature branches)
## @param global.branchlabel - Label for the branch, used for reference label
global:
  # Application stack name, used for naming resources and grouping applications
  appStack: "app"
  
  # Name of the git branch (used for feature branches)
  gitbranch: ""
  
  # Label for the branch, used for reference label
  branchlabel: ""

  # Use application-level language configuration to override
  language: "csharp"

  # Flag to indicate if we are migrating to v2 (enables certain ArgoCD sync options)
  v2migration: false
  
  env: {}
  dependencies:
    mongodb: false
    elasticsearch: false
    redis: false
    postgres: false
    sqlserver: false
    clickhouse: false
    azureservicebus: false
    redpanda: false
    loadsure: false
    chargify: false

## @section Environment Settings
## Environment-specific settings

## @param environment.name - Environment name (dev, preprod, prod, or feature-*)
## @param environment.dependencyenv - Environment name for dependencies
## @param environment.domainOverride.enabled - Whether to override the default domain
## @param environment.domainOverride.domain - Domain to use when override is enabled
environment:
  # Environment name (dev, preprod, prod, or feature-*)
  name: "dev"
  
  # Environment name for dependencies
  dependencyenv: "dev"
  
  # Domain override settings
  domainOverride:
    # Whether to override the default domain
    # Default domains are: mycarrier.dev for non-prod, mycarriertms.com for prod
    enabled: false
    
    # Domain to use when override is enabled
    domain: "example.com"

## @section Platform Settings
## Platform-wide settings

## @param enableVaultCA - Enable Vault CA certificate download during pod startup
## @param disableOtelAutoinstrumentation - Disable OpenTelemetry automatic instrumentation
## @param tolerations - Default tolerations for all applications
# Enable Vault CA certificate download during pod startup
enableVaultCA: false

# Disable OpenTelemetry automatic instrumentation
# Set to false to enable OpenTelemetry instrumentation
disableOtelAutoinstrumentation: true

# Default tolerations for all applications
tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

# This should match the name of the subfolder containing the specific deployment.
deployment: deployment

## @section Applications
## Configuration for application deployments

## @extra applications Map of application definitions where the key is the application name
## @param applications.example-api.isFrontend - Whether this is a frontend application
## @param applications.example-api.testtrigger [object] - Configuration for automated test jobs
## @param applications.example-api.testtrigger.ttlSecondsAfterFinished - Time to keep test job resources after completion (seconds)
## @param applications.example-api.testtrigger.activeDeadlineSeconds - Maximum time for the test job to run (seconds)
## @param applications.example-api.testtrigger.backoffLimit - Number of retries for the test job
## @param applications.example-api.testtrigger.testdefinitions [array] - Test definitions to run
## @param applications.example-api.testtrigger.testdefinitions.name - Name of the test suite
## @param applications.example-api.testtrigger.testdefinitions.containerImage - Container image to use for running tests
## @param applications.example-api.testtrigger.testdefinitions.containerTag - Tag of the container image
## @param applications.example-api.testtrigger.testdefinitions.secretId - Reference to secrets needed for tests
## @param applications.example-api.testtrigger.testdefinitions.filters [array] - Test filters to select which tests to run
## @param applications.example-api.language - What language is the application written in
## @param applications.example-api.forceOffload - Whether to force offloading
## @param applications.example-api.staticHostname - Static hostname for the application
## @param applications.example-api.labels [object] - Custom labels to add to the application resources
## @param applications.example-api.annotations [object] - Custom annotations to add to the application resources
## @param applications.example-api.deploymentType - Type of deployment: deployment, statefulset, or rollout
## @param applications.example-api.migratingToRollouts - Whether the application is migrating to Argo Rollouts
## @param applications.example-api.version - Application version
## @param applications.example-api.image.registry - Docker registry URL
## @param applications.example-api.image.repository - Docker image repository
## @param applications.example-api.image.tag - Docker image tag
## @param applications.example-api.pullPolicy - Image pull policy: IfNotPresent, Always, or Never
## @param applications.example-api.pullSecret - Name of the pull secret
## @param applications.example-api.env [object] - Environment variables for the application
## @param applications.example-api.ports [object] - Ports to expose
## @param applications.example-api.resources.requests.cpu - CPU resource requests
## @param applications.example-api.resources.requests.memory - Memory resource requests
## @param applications.example-api.resources.limits.cpu - CPU resource limits
## @param applications.example-api.resources.limits.memory - Memory resource limits
## @param applications.example-api.securityContext.readOnlyRootFilesystem - Whether the root filesystem should be read-only
## @param applications.example-api.replicas - Number of pod replicas
## @param applications.example-api.probes.enableLiveness - Enable liveness probe
## @param applications.example-api.probes.enableReadiness - Enable readiness probe
## @param applications.example-api.probes.enableStartup - Enable startup probe
## @param applications.example-api.probes.livenessProbe [object] - Custom liveness probe configuration
## @param applications.example-api.probes.readinessProbe [object] - Custom readiness probe configuration
## @param applications.example-api.probes.startupProbe [object] - Custom startup probe configuration
## @param applications.example-api.service.type - Service type: ClusterIP, NodePort, or LoadBalancer
## @param applications.example-api.service.headless - Whether the service is headless
## @param applications.example-api.service.ports [array] - Service port definitions
## @param applications.example-api.service.annotations [object] - Custom service annotations
## @param applications.example-api.service.timeout - Service timeout setting
## @param applications.example-api.service.retryOn - Retry conditions
## @param applications.example-api.service.attempts - Number of retry attempts
## @param applications.example-api.service.perTryTimeout - Timeout for each retry
## @param applications.example-api.service.istioDisabled - Whether to disable Istio for this service
## @param applications.example-api.networking.ingress.type - Ingress type
## @param applications.example-api.networking.istio.enabled - Enable Istio configuration
## @param applications.example-api.networking.istio.hosts [array] - Additional hostnames
## @param applications.example-api.networking.istio.redirects [object] - Domain redirects
## @param applications.example-api.networking.istio.routes [object] - Custom routes
## @param applications.example-api.networking.istio.responseHeaders [object] - Custom response headers
## @param applications.example-api.networking.istio.corsPolicy [object] - CORS policy
## @param applications.example-api.networking.istio.allowedEndpoints [array] - List of allowed endpoints (exact paths or prefix patterns with *)
## @param applications.example-api.networking.istio.disableDefaultEndpoints - Disable automatic C# default endpoints (/liveness, /health, /api)
## @param applications.example-api.serviceAccount.create - Whether to create a service account
## @param applications.example-api.updateStrategy.type - Update strategy type: RollingUpdate or Recreate
## @param applications.example-api.updateStrategy.rollingUpdate.maxUnavailable - Maximum unavailable pods during rollout
## @param applications.example-api.updateStrategy.rollingUpdate.maxSurge - Maximum extra pods during rollout
## @param applications.example-api.serviceMonitor.enabled - Enable Prometheus ServiceMonitor
## @param applications.example-api.serviceMonitor.interval - Scrape interval
## @param applications.example-api.serviceMonitor.scrapeTimeout - Scrape timeout
## @param applications.example-api.serviceMonitor.scheme - Scrape scheme
## @param applications.example-api.vpa.enabled - Enable Vertical Pod Autoscaler
## @param applications.example-api.vpa.controlledValues - Values controlled by VPA: RequestsOnly or RequestsAndLimits
## @param applications.example-api.vpa.updateMode - VPA update mode: Off, Initial, Auto
## @param applications.example-api.autoscaling.forceAutoscaling - Force autoscaling to be enabled regardless of environment
applications: {}
#       # Example application configuration
#   example-api:
#     enableDebugMode: false
#     # Whether this is a frontend application
#     isFrontend: false

#       # The testtrigger section allows you to configure automated test jobs that run against 
#       # your deployed application.
#     testtrigger:
#       ttlSecondsAfterFinished: "300"  # Time to keep test job resources after completion (seconds)
#       activeDeadlineSeconds: "600"  # Maximum time for the test job to run (seconds)
#       backoffLimit: 0  # Number of retries for the test job
#       apikey: "vault:Secrets/data/testengine#apikey"
#       webhook_url: "vault:Secrets/data/testengine#webhook_url"
#       resources:
#         requests:
#            cpu: "50m"
#            memory: "64Mi"
#         limits:
#           cpu: "500m"
#           memory: "512Mi"
#       testdefinitions: # Test definitions to run
#         - name: "apitests"  # Name of the test suite
#           containerImage: "myregistry.example.com/image/name"  # Container image to use for running tests
#           containerTag: "1.10.2"  # Tag of the container image
#           secretId: "vault:Secrets/data/app_authentication#SecretId" # Reference to secrets needed for tests
#           additionalEnvVars: "key1=value1;key2=value2" # Additional environment variables for the test
#           filters:  # Test filters to select which tests to run
#             - "TestCategory=coretests"
#             - "TestCategory=othercoretests"
#           serviceAddress: "custom-address.dev-exampletestapp.svc.cluster.local" # Custom service address for the test
#         - name: "somedependencytest"
#           containerImage: "myregistry.example.com/image/name"
#           containerTag: "1.10.2"
#           secretId: "vault:Secrets/data/app_authentication#SecretId" # Reference to secrets needed for tests
#           filters:
#             - "TestCategory=otherdomaintests"
#             - "TestCategory=somedependencytests"
    
#       # Whether to force offloading
#     forceOffload: false
      
#       # Static hostname for the application (optional)
#       # staticHostname: "api.example.com"
      
#       # Custom labels to add to the application resources
#     labels:
#       app.kubernetes.io/component: "api"
      
#       # Custom annotations to add to the application resources
#     annotations:
#       app.mycarrier.tech/team: "platform"
      
#       # Type of deployment: deployment, statefulset, or rollout
#     deploymentType: "deployment"
      
#       # Whether the application is migrating to Argo Rollouts
#     migratingToRollouts: false
    
#       # Application version
#     version: "1.0.0"
    
#       # Container image settings
#     image:
#       registry: "myregistry.example.com"
#       repository: "mycarrier/example-api"
#       tag: "1.0.0"
    
#       # Image pull policy: IfNotPresent, Always, or Never
#     pullPolicy: "IfNotPresent"
    
#       # Name of the pull secret
#     pullSecret: "imagepull"
    
#       # Environment variables for the application
#     env:
#       NODE_ENV: "development"
#       LOG_LEVEL: "info"
#       # Example of valueFrom usage:
#       # DB_PASSWORD:
#       #   valueFrom:
#       #     secretKeyRef:
#       #       name: db-secrets
#       #       key: password
    
#       # Ports to expose
#       # Can be defined as a map with custom names:
#     ports:
#       http: 8080
#       metrics: 9090
    
#       # Resource requests and limits
#     resources:
#       requests:
#         cpu: "50m"
#         memory: "64Mi"
#       limits:
#         cpu: "500m"
#         memory: "512Mi"
    
#       # Security context settings
#     securityContext:
#       readOnlyRootFilesystem: false
    
#       # Number of pod replicas
#     replicas: 1
    
#       # Probe settings
#     probes:
#       enableLiveness: true
#       enableReadiness: true
#       enableStartup: false
#       # Customize probes if needed:
#       # livenessProbe:
#       #   httpGet:
#       #     path: /health/live
#       #     port: http
#       #   initialDelaySeconds: 30
#       #   periodSeconds: 15
#       # readinessProbe:
#       #   httpGet:
#       #     path: /health/ready
#       #     port: http
#       #   initialDelaySeconds: 10
#       #   periodSeconds: 7
    
#       # Service configuration
#     service:
#       # Service type: ClusterIP, NodePort, or LoadBalancer
#       type: "ClusterIP"
      
#       # Whether the service is headless
#       headless: false
      
#       # Service port definitions
#       # If not provided, ports from the 'ports' field will be used
#       ports:
#         - name: http
#           port: 80
#           targetPort: 8080
#           protocol: TCP
#         - name: metrics
#           port: 9090
#           targetPort: 9090
      
#       # Custom service annotations
#       annotations:
#         prometheus.io/scrape: "true"
#         prometheus.io/port: "9090"
      
#       # Service timeout settings
#       timeout: "151s"
#       retryOn: "5xx,reset"
#       attempts: 3
#       perTryTimeout: "50s"
      
#       # Whether to disable Istio for this service
#       istioDisabled: false
    
#       # Networking configuration
#     networking:
#       # Ingress configuration
#       ingress:
#         type: "istio"
      
#       # Istio configuration
#       istio:
#         enabled: true
#         # Additional hostnames
#         hosts: []
#         # Domain redirects
#         redirects: {}
#         # Custom routes
#         routes: {}
#         # Custom response headers
#         # If not provided, default security headers will be used
#         responseHeaders: {}
#         # CORS policy
#         corsPolicy: {}
#         # List of allowed endpoints (for C# apps, /liveness, /health, and /api are added automatically if app name contains 'api')
#         # To disable defaults, set disableDefaultEndpoints: true
#         allowedEndpoints: []
#         # allowedEndpoints:
#         #   - "/custom-endpoint"
#         #   - "/api/v1/*"
#         # disableDefaultEndpoints: false  # Set to true to disable automatic C# endpoints
    
#     # Service account configuration
#     serviceAccount:
#       create: false
    
#     # Node selector for pod scheduling
#     # nodeSelector:
#     #   disktype: ssd
    
#     # Priority class name for pod scheduling
#     # priorityClassName: "high-priority"
    
#     # Update strategy configuration
#     updateStrategy:
#       # For standard deployments
#       type: "RollingUpdate"
#       rollingUpdate:
#         maxUnavailable: 0
#         maxSurge: 2
      
#       # For Argo Rollouts deployments
#       # canary:
#       #   steps:
#       #     - setWeight: 25
#       #     - analysis:
#       #         templates:
#       #           - templateName: load-test
#       #     - setWeight: 50
#       #     - analysis:
#       #         templates:
#       #           - templateName: load-test
#       #     - setWeight: 100
#       #   scaleDownDelaySeconds: 30
#       #   scaleDownDelayRevisionLimit: 5
#       #   abortScaleDownDelaySeconds: 30
    
#     # Prometheus ServiceMonitor configuration
#     serviceMonitor:
#       enabled: false
#       interval: "30s"
#       scrapeTimeout: "10s"
#       scheme: "http"
#       # relabelings: []
#       # metricRelabelings: []
#       # tlsConfig: {}
    
#     # Container lifecycle hooks
#     # lifecycle:
#     #   postStart: "echo 'Container started'"
#     #   preStop: "sleep 10 && pkill node"
    
#     # Vertical Pod Autoscaler configuration
#     vpa:
#       enabled: false
#       controlledValues: "RequestsOnly"
#       # VPA update mode: Off, Initial, Auto
#       updateMode: "Auto"
#     # Horizontal Pod Autoscaler configuration
#     autoscaling:
#       enabled: false
#       minReplicas: 2
#       maxReplicas: 5
#       targetCPUUtilizationPercentage: 80
#       forceAutoscaling: false
#       # targetMemoryUtilizationPercentage: 80

## @section Kubernetes Jobs
## Configuration for Kubernetes Jobs to run

## @param jobs [array] - List of Kubernetes Jobs to run
jobs: []
  # Example job configuration
  # - name: db-migration
  #   # When to run: pre-deploy or post-deploy
  #   timing: "pre-deploy"
  #   # Order within the timing group
  #   order: 0
  #   # Custom labels
  #   labels:
  #     app.kubernetes.io/component: "job"
  #   # Job-specific annotations
  #   annotations:
  #     app.mycarrier.tech/team: "platform"
  #   # TTL after job completion (in seconds)
  #   ttlSecondsAfterFinished: 300
  #   # Job timeout (in seconds)
  #   activeDeadlineSeconds: 600
  #   # Number of retries
  #   backoffLimit: 0
  #   # Job container image
  #   image:
  #     registry: "myregistry.example.com"
  #     repository: "mycarrier/db-migration"
  #     tag: "1.0.0"
  #   # Image pull policy
  #   imagePullPolicy: "IfNotPresent"
  #   # Command to run
  #   command: ["/bin/sh", "-c"]
  #   # Arguments for the command
  #   args: ["./run-migration.sh"]
  #   # Environment variables
  #   env:
  #     - name: DB_NAME
  #       value: "mydb"
  #   # Resource limits
  #   resources:
  #     requests:
  #       cpu: "100m"
  #       memory: "64Mi"
  #     limits:
  #       cpu: "500m"
  #       memory: "256Mi"

## @section Secrets Management
## Configuration for secrets from Vault

## @param secrets.bulk.path - Path to secrets in Vault for bulk retrieval
## @param secrets.individual [array] - Individual environment variables from Vault
## @param secrets.mounted [array] - File-mounted secrets from Vault
secrets:
  # Bulk secrets from Vault path
  bulk:
    # path: "secrets/data/dev/app"
  
  # Individual environment variables from Vault
  individual: []
    # Example of an individual secret
    # - envVarName: DB_PASSWORD
    #   path: secrets/data/dev/app/db
    #   keyName: password
  
  # File-mounted secrets from Vault
  mounted: []
    # Example of a mounted secret
    # - name: certificate
    #   mountedFileName: cert.pem
    #   vault:
    #     path: secrets/data/dev/app/certs
    #     property: certificate
    #   mount:
    #     path: /app/certs
    #     subPath: cert.pem

## @section Infrastructure Resources
## Infrastructure resources provisioned via Crossplane

## @param infrastructure.azure.resourceGroup [array] - Azure Resource Group configurations
## @param infrastructure.azure.resourceGroup[].name - Name of the Resource Group
## @param infrastructure.azure.resourceGroup[].location - Azure region for the Resource Group
## @param infrastructure.azure.resourceGroup[].managementPolicies [array] - Crossplane management policies
## @param infrastructure.azure.resourceGroup[].managedBy - ID of the resource or application that manages this Resource Group
## @param infrastructure.azure.resourceGroup[].tags [object] - Resource tags
## @param infrastructure.azure.resourceGroup[].namespace - Kubernetes namespace for the resource
## @param infrastructure.azure.resourceGroup[].annotations [object] - Custom annotations for the resource
## @param infrastructure.azure.storage.accounts [array] - Azure storage account configurations
## @param infrastructure.azure.storage.accounts[].existingResourceGroup.name - Name of existing resource group to use
## @param infrastructure.azure.storage.accounts[].newResourceGroup.name - Name for new resource group to create
## @param infrastructure.azure.storage.accounts[].existingStorageAccount.name - Name of existing storage account to use
## @param infrastructure.azure.storage.accounts[].newStorageAccount.name - Name for new storage account to create
## @param infrastructure.azure.storage.accounts[].newStorageAccount.location - Azure region for the storage account
## @param infrastructure.azure.storage.accounts[].newStorageAccount.accountTier - Storage account tier: Standard or Premium
## @param infrastructure.azure.storage.accounts[].newStorageAccount.accountReplicationType - Replication type: LRS, GRS, RAGRS, ZRS, GZRS, RAGZRS
## @param infrastructure.azure.storage.accounts[].newStorageAccount.accessTier - Access tier: Cool, Hot, Archive
## @param infrastructure.azure.storage.accounts[].containers [array] - Blob containers to create
## @param infrastructure.azure.storage.accounts[].containers[].name - Container name
## @param infrastructure.azure.storage.accounts[].containers[].accessType - Container access type: private, blob, container
## @param infrastructure.azure.storage.accounts[].containers[].metadata [object] - Container metadata
## @param infrastructure.azure.storage.accounts[].tags [object] - Resource tags
## @param infrastructure.azure.storage.accounts[].namespace - Kubernetes namespace for the resource
## @param infrastructure.azure.storage.accounts[].annotations [object] - Custom annotations for the resource
## @param infrastructure.azure.servicebus [array] - Azure Service Bus configurations
## @param infrastructure.azure.servicebus[].name - Name of the Service Bus namespace
## @param infrastructure.azure.servicebus[].namespace - Kubernetes namespace for the resource
## @param infrastructure.azure.servicebus[].location - Azure region for the Service Bus namespace
## @param infrastructure.azure.servicebus[].sku - Service Bus SKU: Basic, Standard, or Premium
## @param infrastructure.azure.servicebus[].resourceGroupName - Name of the resource group
## @param infrastructure.azure.servicebus[].capacity - Messaging units for Premium SKU (1, 2, 4, 8, or 16)
## @param infrastructure.azure.servicebus[].managementPolicies [array] - Crossplane management policies (e.g., ["Observe"] for import)
## @param infrastructure.azure.servicebus[].tags [object] - Resource tags
## @param infrastructure.azure.servicebus[].annotations [object] - Custom annotations for the resource
## @param infrastructure.azure.servicebus[].topics [array] - Service Bus topics
## @param infrastructure.azure.servicebus[].topics[].name - Topic name
## @param infrastructure.azure.servicebus[].topics[].managementPolicies [array] - Crossplane management policies for topic
## @param infrastructure.azure.servicebus[].topics[].annotations [object] - Custom annotations for the topic
## @param infrastructure.azure.servicebus[].topics[].subscriptions [array] - Topic subscriptions (required)
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].name - Subscription name
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].managementPolicies [array] - Crossplane management policies for subscription
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].maxDeliveryCount - Maximum delivery attempts
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].lockDuration - Lock duration (ISO 8601 format)
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].annotations [object] - Custom annotations for the subscription
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].rules [array] - Subscription rules (optional)
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].rules[].name - Rule name
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].rules[].filterType - Filter type: SqlFilter or CorrelationFilter
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].rules[].sqlFilter - SQL filter expression
## @param infrastructure.azure.servicebus[].topics[].subscriptions[].rules[].managementPolicies [array] - Crossplane management policies for rule
infrastructure:
  azure:
    # Azure Resource Group configurations
    resourceGroup: []
      # Example Resource Group configuration:
      # - name: "rg-app-dev"                              # Required: Resource Group name
      #   location: "East US"                             # Required: Azure region
      #
      #   # Optional: Manage resource lifecycle with managementPolicies
      #   # managementPolicies: ["Observe"]               # Optional: Management policies (default: ["Observe"] - import/read-only mode)
      #                                                    # IMPORTANT: "Delete" policy is BLOCKED to protect infrastructure from accidental deletion
      #                                                    # Default is safe for importing existing resources: ["Observe"]
      #                                                    # To create/manage new resources: ["Create", "Update", "LateInitialize", "Observe"]
      #
      #   # Optional: Managed by resource ID
      #   # managedBy: "/subscriptions/.../resourceGroups/..."  # Optional: ID of resource that manages this RG
      #
      #   # Optional: Resource tags
      #   tags:
      #     environment: "dev"
      #     purpose: "application-resources"
      #     managed-by: "crossplane"
      #
      #   # Optional: Custom Kubernetes namespace
      #   namespace: "my-custom-namespace"                # Optional: Custom Kubernetes namespace (default: {env}-{appStack})
      #
      #   # Optional: Custom annotations
      #   annotations:
      #     custom.annotation/key: "custom-value"

    storage:
      # Azure storage account configurations
      accounts: []
        # Example storage account configuration:
        # - # Resource Group Options (choose one):
        #   existingResourceGroup:                          # Option 1: Use existing external resource group
        #     name: "my-existing-rg"                        # Required: Name of existing resource group
        #   # OR
        #   newResourceGroup:                               # Option 2: Create new resource group as part of composition
        #     name: "my-new-rg"                             # Optional: Name for new resource group (auto-generated if omitted)
        #   
        #   # Storage Account Options (choose one):
        #   existingStorageAccount:                         # Option 1: Use existing external storage account
        #     name: "mystorageacct"                         # Required: Name of existing storage account
        #   # OR
        #   newStorageAccount:                              # Option 2: Create new storage account as part of composition
        #     name: "mystorageacct"                         # Optional: Name for new storage account (auto-generated if omitted)
        #     location: "East US"                           # Required: Azure region
        #     accountTier: "Standard"                       # Optional: Standard (default) or Premium
        #     accountReplicationType: "LRS"                 # Optional: LRS (default), GRS, RAGRS, ZRS, GZRS, RAGZRS
        #     accessTier: "Cool"                            # Optional: Cool (default), Hot, Archive
        #   
        #   # Optional: Blob containers to create
        #   containers:
        #     - name: "uploads"                             # Required: Container name
        #       accessType: "private"                       # Optional: private (default), blob, container
        #       metadata:                                   # Optional: Container metadata
        #         retention: "30days"
        #         tier: "hot"
        #     - name: "logs"
        #       accessType: "blob"
        #   
        #   # Optional: Resource tags
        #   tags:
        #     environment: "dev"
        #     purpose: "application-storage"
        #   
        #   # Optional: Custom Kubernetes namespace
        #   namespace: "my-custom-namespace"
        #   
        #   # Optional: Custom annotations
        #   annotations:
        #     custom.annotation/key: "custom-value"
    # Azure Service Bus configurations
    servicebus: []
      # Example Service Bus configuration:
      # - name: "my-servicebus-namespace"                # Required: Service Bus namespace name
      #   location: "East US"                             # Required: Azure region
      #   sku: "Standard"                                 # Required: Basic, Standard, or Premium (no default - must specify)
      #   resourceGroupName: "rg-app-dev"                 # Optional: Resource group name (default: rg-{appStack}-{env})
      #
      #   # Optional: For Premium SKU only
      #   # capacity: 1                                   # Optional: Messaging units: 1, 2, 4, 8, or 16 (default: 1)
      #
      #   # Optional: Manage resource lifecycle with managementPolicies
      #   # managementPolicies: ["Observe"]               # Optional: Management policies (default: ["Observe"] - import/read-only mode)
      #                                                    # IMPORTANT: "Delete" policy is BLOCKED to protect infrastructure from accidental deletion
      #                                                    # Default is safe for importing existing resources: ["Observe"]
      #                                                    # To create/manage new resources: ["Create", "Update", "LateInitialize", "Observe"]
      #
      #   # Optional: Resource tags
      #   tags:
      #     environment: "dev"
      #     purpose: "messaging"
      #
      #   # Optional: Custom Kubernetes namespace
      #   namespace: "my-custom-namespace"                # Optional: Custom Kubernetes namespace (default: {env}-{appStack})
      #
      #   # Required: At least one topic with subscriptions
      #   topics:
      #     - name: "orders"                              # Required: Topic name
      #
      #       # Optional: Topic-level management policies
      #       # managementPolicies: ["Observe"]           # Optional: Management policies (default: ["Observe"] - import/read-only mode)
      #                                                    # IMPORTANT: "Delete" policy is BLOCKED
      #                                                    # To create/manage new topics: ["Create", "Update", "LateInitialize", "Observe"]
      #
      #       # Optional: Topic settings (all have Azure defaults if omitted)
      #       # maxSizeInMegabytes: 1024                  # Optional: Topic size in MB (default: 1024 for Basic/Standard, 5120 for Premium)
      #       # requiresDuplicateDetection: false         # Optional: Enable duplicate detection (default: false)
      #       # defaultMessageTtl: "P14D"                 # Optional: ISO 8601 duration (default: P14D - 14 days)
      #       # duplicateDetectionHistoryTimeWindow: "PT10M" # Optional: ISO 8601 duration (default: PT10M - 10 minutes)
      #       # batchedOperationsEnabled: true            # Optional: Enable batched operations (default: true)
      #       # expressEnabled: false                     # Optional: Enable Express mode (Standard/Premium only, default: false)
      #       # partitioningEnabled: false                # Optional: Enable partitioning (default: false)
      #       # supportOrdering: false                    # Optional: Enable message ordering (default: false)
      #       # autoDeleteOnIdle: "P10675199DT2H48M5.4775807S" # Optional: Auto-delete after idle time (default: never)
      #
      #       # Required: At least one subscription per topic
      #       subscriptions:
      #         - name: "orders-processor"               # Required: Subscription name
      #
      #           # Optional: Subscription-level management policies
      #           # managementPolicies: ["Observe"]      # Optional: Management policies (default: ["Observe"] - import/read-only mode)
      #                                                   # IMPORTANT: "Delete" policy is BLOCKED
      #                                                   # To create/manage new subscriptions: ["Create", "Update", "LateInitialize", "Observe"]
      #
      #           # Optional: Subscription settings (all have Azure defaults if omitted)
      #           # maxDeliveryCount: 10                 # Optional: Maximum delivery attempts (default: 10)
      #           # lockDuration: "PT1M"                 # Optional: ISO 8601 duration (default: PT1M - 1 minute)
      #           # requiresSession: false               # Optional: Enable sessions (default: false)
      #           # defaultMessageTtl: "P14D"            # Optional: ISO 8601 duration (default: P14D - 14 days)
      #           # deadLetteringOnMessageExpiration: false # Optional: Move expired messages to DLQ (default: false)
      #           # deadLetteringOnFilterEvaluationError: true # Optional: Move messages to DLQ on filter errors (default: true)
      #           # batchedOperationsEnabled: true       # Optional: Enable batched operations (default: true)
      #           # autoDeleteOnIdle: "P10675199DT2H48M5.4775807S" # Optional: Auto-delete after idle time (default: never)
      #           # forwardTo: "another-topic-or-queue"  # Optional: Forward messages to another entity
      #           # forwardDeadLetteredMessagesTo: "dlq-topic-or-queue" # Optional: Forward dead-lettered messages
      #
      #           # Optional: Subscription rules for message filtering
      #           rules:
      #             - name: "high-priority-filter"       # Required: Rule name
      #               filterType: "SqlFilter"            # Required: SqlFilter or CorrelationFilter
      #               sqlFilter: "priority = 'high'"     # Required for SqlFilter: SQL expression for filtering
      #               # action: "SET priority = 'urgent'" # Optional: SQL action to modify message properties
      #
      #               # Optional: Rule-level management policies
      #               # managementPolicies: ["Observe"]  # Optional: Management policies (default: ["Observe"] - import/read-only mode)
      #                                                   # IMPORTANT: "Delete" policy is BLOCKED
      #                                                   # To create/manage new rules: ["Create", "Update", "LateInitialize", "Observe"]
      #
      #             - name: "correlation-filter-example"
      #               filterType: "CorrelationFilter"    # Required: Filter type
      #               correlationFilter:                 # Required for CorrelationFilter: Correlation properties
      #                 contentType: "application/json"  # Optional: Match content type
      #                 correlationId: "order-123"       # Optional: Match correlation ID
      #                 label: "OrderCreated"            # Optional: Match message label
      #                 messageId: "msg-456"             # Optional: Match message ID
      #                 properties:                      # Optional: Match custom properties
      #                   customProp: "customValue"
      #                 # replyTo: "reply-queue"         # Optional: Match reply-to address
      #                 # replyToSessionId: "session-123" # Optional: Match reply-to session ID
      #                 # sessionId: "session-456"       # Optional: Match session ID
      #                 # to: "destination"              # Optional: Match destination
      #
      #         - name: "orders-archive"
      #           maxDeliveryCount: 1                    # Lower retry for archive subscription
      #           lockDuration: "PT30S"                  # Shorter lock duration
      #
      #     - name: "notifications"
      #       subscriptions:
      #         - name: "email-sender"
      #           maxDeliveryCount: 5                    # Fewer retries for notifications
isEnvironmentDeploy: false
