global:
  appStack: utils
  forceAutoscaling: false
  gitbranch: main
  branchlabel: main
  language: go
environment:
  name: dev
  dependencyenv:
  domainOverride:
    enabled: false
    staticHostname:
    domain:
application:
  isFrontend: false
  migratingToRollouts: false
  labels: {}
  annotations: {}
  autoscaling:
    enabled: true
  deploymentType: deployment
  env:
    ENVIRONMENT: dev
  image:
    registry: mycarrieracr.azurecr.io
    repository: utils/route-tester
    tag: 25.7.83ec56d
  securityContext:
    readOnlyRootFilesystem: false
  initContainers: {}
  name: route-tester
  ports:
    http: 8080
  pullPolicy: IfNotPresent
  replicas: 1
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 256Mi
  version: 
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
serviceAccount:
  create: true
serviceMonitor:
  enabled: false
service:
  affinityTimeoutSeconds: "1000"
  annotations: {}
  ports: []
networking:
  ingress:
    type: istio
  istio: {}
  krakend: {}
disableOtelAutoinstrumentation: true
secrets:
  bulk:
    path: null
  individual:
    - envVarName: anotherfakesecret
      path: secrets/dev/shared/theoriginalsecret
      keyName: mykey

offloads:
  application:
    name:
    labels: {}
    annotations: {}
    autoscaling:
      enabled: false
    deploymentType: 
    env:
      a: b
      c: d
    image:
      registry: 
      repository: 
      tag: 
    securityContext:
      readOnlyRootFilesystem:
    initContainers: {}
    ports:
      http: 
    probes:
      readinessProbe: {}
      livenessProbe: {}
      startupProbe: {}
    pullPolicy: 
    replicas:
    resources:
      limits:
        cpu:
        memory: 
      requests:
        cpu:
        memory:
    version:
    volumes: []
    updateStrategy: {}

  secrets:
    individual: 
      - envVarName: anotherfakesecret
        path: secrets/dev/shared/theoffloadsecret
        keyName: mykey
    mounted:
    bulk:
      path:
