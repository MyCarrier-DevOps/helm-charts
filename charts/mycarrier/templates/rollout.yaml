{{- $fullName := include "helm.fullname" . }}
{{- $envScaling := include "helm.envScaling" . }}
{{- $namespace := include "helm.namespace" . }}
{{- if (eq .Values.application.deploymentType "rollout")  }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ $fullName }}{{- if contains "feature" .Values.global.environment.name }}{{ end }}
  namespace: {{ $namespace }}
  labels:
    {{- include "helm.labels.dependencies" . | indent 4 | trim }}
    {{ include "helm.labels.standard" . | indent 4 | trim }}
    {{ include "helm.labels.version" . | indent 4 | trim }}
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  {{- if not .Values.scaling }}
  replicas: {{ if and (not (kindIs "invalid" .Values.application.replicas)) (or (eq "1" $envScaling) (and (eq "0" $envScaling) (eq "0" (default "0" .Values.application.replicas | toString)))) }}{{ .Values.application.replicas }}{{ else }}{{ 2 }}{{ end }}
  {{- end }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{ include "helm.labels.selector" . | indent 6 | trim }}
  analysis:
    successfulRunHistoryLimit: {{ .Values.application.updateStrategy.successfulRunHistoryLimit | default 10 }}
    unsuccessfulRunHistoryLimit: {{ .Values.application.updateStrategy.successfulRunHistoryLimit | default 10 }}
  minReadySeconds: {{ .Values.application.minReadySeconds | default 0 }}
  {{- if .Values.application.migratingToRollouts }}
  workloadRef:
    apiVersion: {{ .Values.application.apiVersion | default "apps/v1" }}
    kind: Deployment
    name: {{ $fullName }}
    scaleDown: onsuccess
  {{- end }}
  strategy:
  {{- if .Values.application.updateStrategy.bluegreen }}
    blueGreen:
      activeService: {{ $fullName }}
      previewService: {{ $fullName }}-preview
      previewReplicaCount: 1
      autoPromotionEnabled: {{ .Values.application.updateStrategy.bluegreen.autoPromotionEnabled | default true }}
      autoPromotionSeconds: {{ .Values.application.updateStrategy.bluegreen.autoPromotionSeconds | default 30 }}
      scaleDownDelaySeconds: {{ .Values.application.updateStrategy.bluegreen.scaleDownDelaySeconds | default 60 }}
      scaleDownDelayRevisionLimit: {{ .Values.application.updateStrategy.bluegreen.scaleDownDelayRevisionLimit | default 5 }}
      abortScaleDownDelaySeconds: {{ .Values.application.updateStrategy.bluegreen.abortScaleDownDelaySeconds | default 60 }}
      activeMetadata:
        labels:
          {{- include "helm.labels.dependencies" . | indent 10 | trim }}
          {{ include "helm.labels.standard" . | indent 10 | trim }}
          {{ include "helm.labels.version" . | indent 10 | trim }}
          role: active
          strategy: bluegreen
      previewMetadata:
        labels:
          {{- include "helm.labels.dependencies" . | indent 10 | trim }}
          {{ include "helm.labels.standard" . | indent 10 | trim }}
          {{ include "helm.labels.version" . | indent 10 | trim }}
          role: preview
          strategy: bluegreen
      {{- if .Values.application.updateStrategy.bluegreen.prePromotionAnalysis }}
      prePromotionAnalysis:
        templates:
        {{ toYaml .Values.application.updateStrategy.bluegreen.prePromotionAnalysis.templates | indent 8 | trim }}
        {{- if .Values.application.updateStrategy.bluegreen.prePromotionAnalysis.args }}
        args:
        {{ toYaml .Values.application.updateStrategy.bluegreen.prePromotionAnalysis.args | indent 8 | trim }}
        {{- end }}
      {{- end }}
      {{- if .Values.application.updateStrategy.bluegreen.postPromotionAnalysis }}
      postPromotionAnalysis:
        templates:
        {{ toYaml .Values.application.updateStrategy.bluegreen.postPromotionAnalysis.templates | indent 8 | trim }}
        {{- if .Values.application.updateStrategy.bluegreen.postPromotionAnalysis.args }}
        args:
        {{ toYaml .Values.application.updateStrategy.bluegreen.postPromotionAnalysis.args | indent 8 | trim }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- if .Values.application.updateStrategy.canary }}
    canary:
      canaryService: {{ $fullName }}-preview
      stableService: {{ $fullName }}
      trafficRouting:
        istio:
          virtualService:
            name: {{ $fullName }}
            routes:
            - canary
      canaryMetadata:
        labels:
          strategy: canary
          role: preview
      stableMetadata:
        labels:
          strategy: canary
          role: stable
      scaleDownDelaySeconds: {{ .Values.application.updateStrategy.canary.scaleDownDelaySeconds | default 30 }}
      scaleDownDelayRevisionLimit: {{ .Values.application.updateStrategy.canary.scaleDownDelayRevisionLimit | default 5 }}
      abortScaleDownDelaySeconds: {{ .Values.application.updateStrategy.canary.abortScaleDownDelaySeconds | default 30 }}
      {{- if .Values.application.updateStrategy.canary.backgroundanalysis }}
      analysis: # run background analysis while rolling out canary
        templates:
        {{ toYaml .Values.application.updateStrategy.canary.backgroundanalysis.templates | indent 8 | trim }}
        {{- if .Values.application.updateStrategy.canary.backgroundanalysis.args }}
        args:
        {{ toYaml .Values.application.updateStrategy.canary.backgroundanalysis.args | indent 8 | trim }}
        {{- end }}
      {{- end }}
      steps:
      {{ toYaml .Values.application.updateStrategy.canary.steps | indent 6 | trim }}
  {{- end }}
  {{- if not .Values.application.migratingToRollouts }}
  template:
    metadata:
      labels:
        {{ include "helm.labels.dependencies" . | indent 8 | trim }}
        {{ include "helm.labels.standard" . | indent 8 | trim }}
        {{ include "helm.labels.version" . | indent 8 | trim }}
        {{ include "helm.otel.labels" . | indent 8 | trim }}
        {{ include "helm.labels.custom" . | indent 8 | trim }}
      annotations:
        {{ include "helm.annotations.vault" . | indent 8 | trim }}
        {{ include "helm.annotations.istio" . | indent 8 | trim }}
        {{ include "helm.otel.annotations" . | indent 8 | trim }}
        {{- with .Values.application.annotations }}
        {{ toYaml . |  indent 8 }}
        {{- end }}
    spec:
{{ include "helm.podDefaultToleration" . | indent 6 }}
{{ include "helm.podDefaultAffinity" . | indent 6 }}
{{ include "helm.podSecurityContext" . | indent 6 }}
{{ include "helm.podDefaultNodeSelector" . | indent 6 }}
{{ include "helm.podDefaultPriorityClassName" . | indent 6 }}
      {{- with .Values.serviceAccount }}
      serviceAccountName: {{ .name | default $fullName }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.application.terminationGracePeriodSeconds | default "10" }}
      {{- with .Values.application.initContainers }}
      initContainers:
      {{- range . }}
        - name: {{ .name }}
          image: "{{ .image }}:{{ .tag | default $.Chart.AppVersion }}"
          command: {{ .command }}
          args:
            {{ toYaml .args | indent 10 | trim }}
          env:
            - name: SERVICE_ADDRESS
              value: {{ $fullName }}-preview.{{ $namespace }}.svc.cluster.local
            {{ include "helm.lang.vars" . | indent 12 | trim }}
            {{ include "helm.otel.language" $ | indent 12 | trim }}
            {{ include "helm.otel.envVars" $ | indent 12 | trim }}
            {{ include "helm.vault" $ | indent 12 | trim }}
          {{- range $key, $value := omit .env "OTEL_EXPORTER_OTLP_ENDPOINT" "ComputedEnvironmentName" "ActiveOffloads" "KeyVault_RedisConnection" "Auth_KeyVault_RedisConnection" "KeyVault_IsActive" "KeyVault_SplitIoProxyApiKey" "KeyVault_SplitIoProxyUrl"}}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
          {{ include "helm.containerSecurityContext" $ | indent 10 | trim }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Values.application.name | default $fullName }}
          image: "{{ .Values.application.image.registry }}/{{ .Values.application.image.repository }}:{{ .Values.application.image.tag }}"
          {{- if .Values.application.command }}command: {{ .Values.application.command }}{{end}}
          {{- if .Values.application.args }}args: {{ .Values.application.args | default "" }}{{end}}
          imagePullPolicy: {{ .Values.application.pullPolicy | default "IfNotPresent" }}
          {{- if .Values.application.ports }}
          ports:
            {{- range $key, $value := .Values.application.ports }}
            - name: {{ $key | lower }}
              containerPort: {{ $value }}
              protocol: TCP
            {{- end }}
          {{- end }}
{{- if .Values.application.probes.enableLiveness}}
          {{- if .Values.application.probes.livenessProbe }}
          livenessProbe:
            {{ toYaml .Values.application.probes.livenessProbe | indent 12 | trim }}
          {{- else }}
          {{ include "helm.defaultLivenessProbe" . | indent 10 | trim }}
          {{- end }}
          {{- end }}
          {{- if .Values.application.probes.enableReadiness}}
          {{- if .Values.application.probes.readinessProbe }}
          readinessProbe:
            {{ toYaml .Values.application.probes.readinessProbe | indent 12 | trim }}
          {{- else }}
          {{ include "helm.defaultReadinessProbe" . | indent 10 | trim }}
          {{- end }}
          {{- end }}
          {{- if .Values.application.probes.enableStartup}}
          {{- if .Values.application.probes.startupProbe }}
          startupProbe:
            {{ toYaml .Values.application.probes.startupProbe | indent 12 | trim }}
          {{- else }}
          {{ include "helm.defaultStartupProbe" . | indent 10 | trim }}
          {{- end }}
          {{- end }}
          # lifecycle hooks go here eventually
          env:
            {{ include "helm.lang.vars" . | indent 12 | trim }}
            {{ include "helm.otel.language" . | indent 12 | trim }}
            {{ include "helm.otel.envVars" . | indent 12 | trim }}
            {{- range $key, $value := omit .Values.application.env "OTEL_EXPORTER_OTLP_ENDPOINT" "ComputedEnvironmentName" "ActiveOffloads" "KeyVault_RedisConnection" "Auth_KeyVault_RedisConnection" "KeyVault_IsActive" "KeyVault_SplitIoProxyApiKey" "KeyVault_SplitIoProxyUrl" }}
            - name: "{{ $key }}"
              {{- if kindIs "map" $value }}
              valueFrom:
                {{ toYaml $value | indent 16 | trim}}
              {{- else }}
              value: "{{ tpl (toString $value) $ }}"
              {{- end }}
            {{- end }}
            {{ include "helm.vault" . | indent 12 | trim }}
          {{- if or .Values.configmap .Values.useSecret }}
          envFrom:
            {{- if .Values.configmap }}
            - configMapRef:
                name: "{{ $fullName }}"
            {{- end }}
            {{- if .Values.useSecret }}
            - secretRef:
                name: "{{ $fullName }}-secret"
            {{- end }}
          {{- end }}
          {{ include "helm.resources" . | indent 10 | trim }}
          {{ include "helm.containerSecurityContext" . | indent 10 | trim }}
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
            {{ include "helm.otel.volumeMounts" . | indent 12 | trim }}
            {{ include "helm.secretVolumeMounts" . | indent 12 | trim }}
          {{- if .Values.application.volumes }}
            {{- range .Values.application.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
          {{- end }}
      volumes:
        - name: tmp-dir
          emptyDir: {}
        {{ include "helm.otel.volumes" . | indent 8 | trim }}
        {{ include "helm.secretVolumes" . | indent 8 | trim }}
      {{- if .Values.application.volumes }}
        {{- range .Values.application.volumes }}
        - name: {{ .name }}
          {{ if ( or (and ( .kind ) (eq (.kind | lower) "emptydir")) (not .kind)) }}emptyDir: {}{{- end }}
        {{- end }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.application.pullSecret | default "imagepull"}}
  {{- end }}
{{- end }}
