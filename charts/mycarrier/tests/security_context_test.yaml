suite: Security Context Tests
templates:
  - deployment.yaml
tests:
  - it: should set custom pod security context
    set:
      environment.name: "dev"
      applications.security-test-app:
        enabled: true
        deploymentType: deployment
        image:
          registry: "test-registry"
          repository: "security-test-app"
          tag: "1.0.0"
        podSecurityContext:
          runAsUser: 1000
          runAsGroup: 3000
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.template.spec.securityContext.runAsGroup
          value: 3000

  - it: should set container security context
    set:
      environment.name: "dev"
      applications.container-security-app:
        enabled: true
        deploymentType: deployment
        image:
          registry: "test-registry"
          repository: "container-security-app"
          tag: "1.0.0"
        containerSecurityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Updated to match chart behavior
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: false

  - it: should apply both pod and container security contexts
    set:
      environment.name: "dev"
      applications.full-security-app:
        enabled: true
        deploymentType: deployment
        image:
          registry: "test-registry"
          repository: "full-security-app"
          tag: "1.0.0"
        podSecurityContext:
          runAsNonRoot: true
          runAsUser: 1000
        containerSecurityContext:
          privileged: false
          readOnlyRootFilesystem: false  # Updated to match chart behavior
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.template.spec.containers[0].securityContext.privileged
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: false