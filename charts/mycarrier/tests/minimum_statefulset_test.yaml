suite: Minimum StatefulSet Configuration Tests
templates:
  - statefulset.yaml
tests:
  - it: should create a valid statefulset with minimum required configuration
    set:
      global:
        appStack: "test-stack"
        language: "nodejs"
      environment:
        name: "dev"
      applications:
        minimal-stateful-app:
          deploymentType: statefulset
          image:
            registry: "registry.example.com"
            repository: "minimal-stateful-app"
            tag: "1.0.0"
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: metadata.name
          value: test-stack-minimal-stateful-app
      - equal:
          path: spec.template.spec.containers[0].image
          value: registry.example.com/minimal-stateful-app:1.0.0
      - hasDocuments:
          count: 1
      # Verify essential statefulset properties are set
      - exists:
          path: spec.selector.matchLabels
      - exists:
          path: spec.serviceName
      - equal:
          path: spec.serviceName
          value: test-stack-minimal-stateful-app
      # Verify the default replicas is set to 1
      - equal:
          path: spec.replicas
          value: 1
      # Verify labels are properly set
      - exists:
          path: metadata.labels
      - isSubset:
          path: metadata.labels
          content:
            app: test-stack-minimal-stateful-app
            app.kubernetes.io/name: test-stack-minimal-stateful-app
      # Verify container environment variables are present
      - exists:
          path: spec.template.spec.containers[0].env

  - it: should handle statefulset with minimum volume configuration
    set:
      global:
        appStack: "test-stack"
        language: "nodejs"
      environment:
        name: "dev"
      applications:
        minimal-volume-app:
          deploymentType: statefulset
          image:
            registry: "registry.example.com"
            repository: "minimal-volume-app"
            tag: "1.0.0"
          volumes:
            - name: "data"
              mountPath: "/data"
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: metadata.name
          value: test-stack-minimal-volume-app
      # Only verify that volumeMounts contains our requested mount
      - exists:
          path: spec.template.spec.containers[0].volumeMounts
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: data
            mountPath: /data