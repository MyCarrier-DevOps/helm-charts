apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "harborwebhook.fullname" . }}
  labels:
    {{- include "harborwebhook.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "harborwebhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
      labels:
        {{- include "harborwebhook.selectorLabels" . | nindent 8 }}
        goharbor.io/harbor-container-webhook-disable: "true"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "harborwebhook.serviceAccountName" . }}
      priorityClassName: {{ .Values.priorityClassName }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - --config=/etc/hcw/config/webhook-config.yaml
            {{- range $arg := .Values.extraArgs }}
            - {{ $arg }}
            {{- end }}
            {{- with .Values.extraEnv }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- toYaml . | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.healthPort }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.healthPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/hcw/config
              name: config
              readOnly: true
            {{- if .Values.certManager.enabled }}
            - mountPath: /etc/hcw/certs
              name: certs
              readOnly: true
            {{- end }}
            {{- with .Values.additionalVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "harborwebhook.fullname" . }}
        {{- if .Values.certManager.enabled }}
        - name: certs
          secret:
            secretName: {{ include "harborwebhook.fullname" . }}-certs
        {{- end }}
        {{- with .Values.additionalVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
