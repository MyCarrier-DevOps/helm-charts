{{ if .Values.writer.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "qryn-all-in-one.fullname" . }}-writer
  labels:
    io.metrico.service: qryn-writer
  {{- include "qryn-all-in-one.labels" . | nindent 4 }}
spec:
  type: {{ .Values.writer.type }}
  selector:
    io.metrico.service: qryn-writer
  {{- include "qryn-all-in-one.selectorLabels" . | nindent 4 }}
  ports:
    - port: {{.Values.writer.env.qrynHttpSettingsPort }}
      targetPort: {{.Values.writer.env.qrynHttpSettingsPort }}
      protocol: TCP
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qryn-all-in-one.fullname" . }}-writer
  labels:
    io.metrico.service: qryn-writer
  {{- include "qryn-all-in-one.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.writer.replicas }}
  revisionHistoryLimit: {{ .Values.writer.revisionHistoryLimit }}
  selector:
    matchLabels:
      io.metrico.service: qryn-writer
    {{- include "qryn-all-in-one.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.metrico.service: qryn-writer
        sidecar.istio.io/inject: "false"
      {{- include "qryn-all-in-one.selectorLabels" . | nindent 8 }}
      {{- with .Values.writer.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.writer.autoInitializeDb }}
      initContainers:
        - env:
            - name: QRYN_CTRL_HOST
              value: {{ include "qryn-all-in-one.fullname" . }}-ctrl
            - name: QRYN_CTRL_PORT
              value: {{ quote .Values.ctrl.port }}
          command:
            - "/bin/sh"
            - "-c"
            - |
              sleep 20; \
              curl -X POST http://$QRYN_CTRL_HOST:$QRYN_CTRL_PORT/initialize --data-binary @- <<EOF
              {
                "database_data": [
                  {
                    "cloud": false,
                    "cluster_name": "",
                    "debug": true,
                    "distributed": false,
                    "help": "Settings for Clickhouse Database (data)",
                    "host": "$QRYN_DATABASE_DATA_0_HOST",
                    "name": "$QRYN_DATABASE_DATA_0_NAME",
                    "node": "$QRYN_DATABASE_DATA_0_NODE",
                    "pass": "$QRYN_DATABASE_DATA_0_PASS",
                    "port": $QRYN_DATABASE_DATA_0_PORT,
                    "primary": true,
                    "secure": true,
                    "ttl_days": 90,
                    "user": "$QRYN_DATABASE_DATA_0_USER"
                  }
                ]
              }
              EOF
          envFrom:
            - configMapRef:
                name: {{ include "qryn-all-in-one.fullname" . }}-qryn
          image: curlimages/curl:latest
          imagePullPolicy: IfNotPresent
          name: initialize-qryn-db
          ports:
            - containerPort: 9090
              protocol: TCP
          resources: {}
          restartPolicy: OnFailure
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      {{- end }}
      containers:
        - command:
            - sh
            - -c
            - ./cloki-writer
          env:
            - name: QRYN_HTTP_SETTINGS_PORT
              value: {{ quote .Values.writer.env.qrynHttpSettingsPort }}
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ quote .Values.kubernetesClusterDomain }}
          envFrom:
            - configMapRef:
                name: {{ include "qryn-all-in-one.fullname" . }}-qryn
          image: {{ .Values.writer.image.repository }}:{{ .Values.writer.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.writer.imagePullPolicy }}
          name: qryn-writer
          ports:
            - name: http
              containerPort: {{.Values.writer.env.qrynHttpSettingsPort }}
              protocol: TCP
          resources: {{- toYaml .Values.writer.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: {{ .Values.writer.livenessProbe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ .Values.writer.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.writer.livenessProbe.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.writer.livenessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.writer.livenessProbe.successThreshold | default 1 }}
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: {{ .Values.writer.readinessProbe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ .Values.writer.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.writer.readinessProbe.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.writer.readinessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.writer.readinessProbe.successThreshold | default 1 }}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: qryn-dckr
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      {{- if .Values.writer.additionalVolumes }}
      volumes:
          {{- toYaml .Values.writer.additionalVolumes | nindent 8 }} 
      {{- end }}
      {{- with .Values.writer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.writer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.writer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.writer.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "qryn-all-in-one.fullname" . }}-writer
  labels:
    io.metrico.service: qryn-reader
    {{- include "qryn-all-in-one.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "qryn-all-in-one.fullname" . }}-writer
  minReplicas: {{ .Values.writer.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.writer.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.writer.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.writer.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.writer.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.writer.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}
{{ end }}